% script to test concatenation of NWB data
clear; close all

% Gather nwb blocks to concatenate
nwbpn = 'C:\DATAtemp\STNstim_GPrecord\Data Acquisition\Nebula-210726\';
% nwbBlocks = {'AzNeuralverTwo-210726-105657', ...
%     'AzNeuralverTwo-210726-105928', ...
%     'AzNeuralverTwo-210726-110153'};
nwbBlocks = {'AzNeuralverTwo-210726-105657', ...
    'AzNeuralverTwo-210726-105928', ...
    'AzNeuralverTwo-210726-110153', ...
    'AzNeuralverTwo-210726-110428', ...
    'AzNeuralverTwo-210726-110705', ...
    'AzNeuralverTwo-210726-110934', ...
    'AzNeuralverTwo-210726-111240', ...
    'AzNeuralverTwo-210726-111525', ...
    'AzNeuralverTwo-210726-111915', ...
    'AzNeuralverTwo-210726-112157', ...
    'AzNeuralverTwo-210726-112448', ...
    'AzNeuralverTwo-210726-112727'}; 


nBlocks = length(nwbBlocks);
for iBlk = 1:nBlocks
    nwbBlk(iBlk) = nwbRead([nwbpn nwbBlocks{iBlk} '.nwb']);

end



% Run concatenation
% Build full path to desired TimeSeries in nwb file:
% Initialize concatenated version of TimeSeries: tSeriesConc. 
% tSeriesName = stores;
% processingModuleStr = "DBSartifact_detect-clean";
% tSeriesStr = "spkClean";
% nwbTSloadpath = join(["processing.get('", ...
%     processingModuleStr, ...
%     "').nwbdatainterface.get('", ...
%     tSeriesStr, ...
%     "')"], "");
% tSerConc = util.nwbConcat_TimeSeries(nwbTSloadpath, nwbBlk)


nwbpn = 'C:\DATAtemp\STNstim_GPrecord\Data Acquisition\Nebula-210726\';
nwbfn = 'StnDbsNeb_210726-105657';
[filepath, name, ~] = fileparts([nwbpn nwbfn]);
func_concatBlocksNWB_export(nwbBlk, [filepath '\' name '.nwb'])
% nwbSess = func_concatBlocksNWB(nwbBlk);

% Save session-NWB result